[{"/home/aman/Desktop/ass1/Job-Portal-Website/frontend/src/index.js":"1","/home/aman/Desktop/ass1/Job-Portal-Website/frontend/src/reportWebVitals.js":"2","/home/aman/Desktop/ass1/Job-Portal-Website/frontend/src/App.js":"3","/home/aman/Desktop/ass1/Job-Portal-Website/frontend/src/components/Appnavbar.js":"4","/home/aman/Desktop/ass1/Job-Portal-Website/frontend/src/components/Joblist.js":"5","/home/aman/Desktop/ass1/Job-Portal-Website/frontend/src/components/Register.js":"6","/home/aman/Desktop/ass1/Job-Portal-Website/frontend/src/components/Login.js":"7","/home/aman/Desktop/ass1/Job-Portal-Website/frontend/src/components/ApplicantNavbar.js":"8","/home/aman/Desktop/ass1/Job-Portal-Website/frontend/src/components/RecruiterNavbar.js":"9","/home/aman/Desktop/ass1/Job-Portal-Website/frontend/src/components/Rec-addjob.js":"10","/home/aman/Desktop/ass1/Job-Portal-Website/frontend/src/components/Rec-myjob.js":"11","/home/aman/Desktop/ass1/Job-Portal-Website/frontend/src/components/Rec-jobreq.js":"12","/home/aman/Desktop/ass1/Job-Portal-Website/frontend/src/components/Rec-profile.js":"13","/home/aman/Desktop/ass1/Job-Portal-Website/frontend/src/components/Appjob.js":"14","/home/aman/Desktop/ass1/Job-Portal-Website/frontend/src/components/Profilerecedit.js":"15","/home/aman/Desktop/ass1/Job-Portal-Website/frontend/src/components/App-profile.js":"16","/home/aman/Desktop/ass1/Job-Portal-Website/frontend/src/components/Profileappedit.js":"17","/home/aman/Desktop/ass1/Job-Portal-Website/frontend/src/components/Rec-jobedit.js":"18","/home/aman/Desktop/ass1/Job-Portal-Website/frontend/src/components/Appsop.js":"19","/home/aman/Desktop/ass1/Job-Portal-Website/frontend/src/components/Shortlist.js":"20","/home/aman/Desktop/ass1/Job-Portal-Website/frontend/src/components/App-application.js":"21","/home/aman/Desktop/ass1/Job-Portal-Website/frontend/src/components/rateapp.js":"22","/home/aman/Desktop/ass1/Job-Portal-Website/frontend/src/components/ratejob.js":"23"},{"size":478,"mtime":1611506363677,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":1611506363677,"results":"26","hashOfConfig":"25"},{"size":2541,"mtime":1611657754973,"results":"27","hashOfConfig":"25"},{"size":1165,"mtime":1611506363677,"results":"28","hashOfConfig":"25"},{"size":1076,"mtime":1610548294589,"results":"29","hashOfConfig":"25"},{"size":3724,"mtime":1611506363677,"results":"30","hashOfConfig":"25"},{"size":3980,"mtime":1611506363677,"results":"31","hashOfConfig":"25"},{"size":1601,"mtime":1611506363677,"results":"32","hashOfConfig":"25"},{"size":1737,"mtime":1611506363677,"results":"33","hashOfConfig":"25"},{"size":6334,"mtime":1611579397745,"results":"34","hashOfConfig":"25"},{"size":3697,"mtime":1611579906623,"results":"35","hashOfConfig":"25"},{"size":7820,"mtime":1611655140235,"results":"36","hashOfConfig":"25"},{"size":2402,"mtime":1611506363677,"results":"37","hashOfConfig":"25"},{"size":15000,"mtime":1611643636855,"results":"38","hashOfConfig":"25"},{"size":3337,"mtime":1611506363677,"results":"39","hashOfConfig":"25"},{"size":2402,"mtime":1611506363677,"results":"40","hashOfConfig":"25"},{"size":3337,"mtime":1611506363677,"results":"41","hashOfConfig":"25"},{"size":3042,"mtime":1611580474414,"results":"42","hashOfConfig":"25"},{"size":2703,"mtime":1611642694162,"results":"43","hashOfConfig":"25"},{"size":9192,"mtime":1611654424112,"results":"44","hashOfConfig":"25"},{"size":5018,"mtime":1611657714805,"results":"45","hashOfConfig":"25"},{"size":2116,"mtime":1611656593089,"results":"46","hashOfConfig":"25"},{"size":2161,"mtime":1611659199996,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1xpjlh7",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"50"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/aman/Desktop/ass1/Job-Portal-Website/frontend/src/index.js",[],["103","104"],"/home/aman/Desktop/ass1/Job-Portal-Website/frontend/src/reportWebVitals.js",[],"/home/aman/Desktop/ass1/Job-Portal-Website/frontend/src/App.js",["105","106"],"/home/aman/Desktop/ass1/Job-Portal-Website/frontend/src/components/Appnavbar.js",[],"/home/aman/Desktop/ass1/Job-Portal-Website/frontend/src/components/Joblist.js",["107","108","109","110","111"],"import React , { Component } from 'react';\nimport { \n    Container , \n    ListGroup ,\n    ListGroupItem ,\n    Button\n} from 'reactstrap';\n\nimport {\n    CSSTransition,\n    TransitionGroup\n} from 'react-transition-group';\n\nimport {v4 as uuidv4} from 'uuid';\n\nclass JobList extends Component{\n    state = {\n        jobs: [\n            {id: uuidv4(), name:'Tech'},\n            {id: uuidv4(), name:'HR'},\n            {id: uuidv4(), name:'Peon'},\n\n        ]\n    }\n    \n    render() {\n        const {jobs} = this.state;\n        return(\n            <Container> \n            <Button\n                color = \"dark\"\n                style = {{marginBottom: '2rem'}}\n                onClick = {() => {\n                    const name  = prompt('Enter Job');\n                    if(name) {\n                        this.setState(state => ({\n                            jobs: [...state.items, {id : uuidv4(),name}]\n                        }));\n                    }\n                }}\n                >Add Job</Button>\n            </Container>\n        ); \n    }\n    \n}\n\nexport default JobList;",["112","113"],"/home/aman/Desktop/ass1/Job-Portal-Website/frontend/src/components/Register.js",[],"/home/aman/Desktop/ass1/Job-Portal-Website/frontend/src/components/Login.js",[],"/home/aman/Desktop/ass1/Job-Portal-Website/frontend/src/components/ApplicantNavbar.js",[],"/home/aman/Desktop/ass1/Job-Portal-Website/frontend/src/components/RecruiterNavbar.js",[],"/home/aman/Desktop/ass1/Job-Portal-Website/frontend/src/components/Rec-addjob.js",[],"/home/aman/Desktop/ass1/Job-Portal-Website/frontend/src/components/Rec-myjob.js",["114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131"],"import React, {Component} from 'react';\nimport axios from 'axios';\n\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\n\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { Link } from 'react-router-dom';\n\nclass RecMyjob extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            jobs: []\n        };\n    }\n\n    async componentWillMount(){\n        let curr = localStorage.getItem('userid');\n\n        let arr = await axios.get('http://localhost:5000/job')\n             .then(response => {\n                return response.data;\n            })\n             .catch(function(error) {\n                 console.log(error);\n             });\n\n        let neww = await arr.filter( items => items.rec === curr );\n        console.log(neww);\n        this.setState({\n                jobs: neww\n        });\n\n    }\n\n            render() {\n                return (\n                    <div>\n                        <table className=\"table table-striped\">\n                            <thead>\n                                <tr>\n                                    <th>Job</th>\n                                    <th>Positions remaining</th>\n                                    <th>Total job requests</th>\n                                    <th>Date of Posting</th>\n\n                                    <th></th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                            { \n                                this.state.jobs.map((job, i) => {\n                                    return (\n                                        <tr key={i}>\n                                            <th>\n                                            <Link to={{ pathname: './shortlist', state: { 'id': job._id} }}>{job.title}</Link></th>\n                                            <td>{job.maxpos}</td>\n                                            <td>{job.maxapp}</td>\n                                            <td>{job.date}</td>\n                                            <th>\n                                        <Link to={{ pathname: './jobedit', state: { 'id': job._id, 'maxpos':job.maxpos, 'maxapp':job.maxapp, 'deadline':job.deadline} }}>Edit</Link></th>    \n                                       <th>\n                                        <Link to={{ pathname: './recprofileedit', state: { 'id': job._id, 'name':job.title} }}>Delete</Link></th>    \n                                           \n                                        </tr>\n                                        \n                                    )\n                                })\n                            }\n                            </tbody>\n                        </table>\n                    </div>\n                )\n            }\n}\n\nexport default RecMyjob;","/home/aman/Desktop/ass1/Job-Portal-Website/frontend/src/components/Rec-jobreq.js",["132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149"],"import React, {Component} from 'react';\nimport axios from 'axios';\n\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\n\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { Link } from 'react-router-dom';\n\nclass RecMyjob extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            applications: []\n        };\n        this.sortbyname = this.sortbyname.bind(this);\n        this.sortbydname = this.sortbydname.bind(this);\n        this.sortbytitle = this.sortbytitle.bind(this);\n        this.sortbydtitle= this.sortbydtitle.bind(this);\n        this.sortbyrating = this.sortbyrating.bind(this);\n        this.sortbydrating = this.sortbydrating.bind(this);\n    }\n    \n    async componentWillMount(){\n        let curr = localStorage.getItem('userid');\n\n        let arr = await axios.get('http://localhost:5000/apply')\n             .then(response => {\n                return response.data;\n            })\n             .catch(function(error) {\n                 console.log(error);\n             });\n\n        \n        const data = await Promise.all( arr.map(async function(job, i){\n            let alldata = {};\n            alldata = {...job};\n            \n            let arrr = await axios.post('http://localhost:5000/user/getname', { id: job.app})\n            .then(response => {\n                return response.data;\n           });\n         //  console.log(arrr.name);\n           alldata.recname = arrr.name;\n           alldata.varr = 1;\n           let arrrr = await axios.post('http://localhost:5000/job/getname', { id: job.jobid})\n            .then(response => {\n              //  console.log(response.data);\n                return response.data;\n           });\n           alldata.jobname = arrrr.title;\n           alldata.typee = arrrr.type;\n           let arrrrr = await axios.post('http://localhost:5000/profileapp/getrating', { id: job.app})\n            .then(response => {\n                return response.data;\n           }); \n           alldata.rating = arrrrr.rating;\n           return alldata;\n         \n        }));\n        this.setState({\n            applications: data\n    });\n    let neww = await data.filter( items => items.rec === curr );\n      //  console.log(neww);\n        this.setState({\n                applications: neww\n        });\n\n        const currr = \"Accepted\";\n        let newww = await neww.filter( items => items.type === currr );\n        this.setState({\n                applications: newww\n        });\n        \n        \n    }\n    sortbyname = () => {\n        let thiss  = this.state.applications;\n        thiss.sort((a,b) => (a.recname > b.recname) ? 1 : -1);\n        this.setState({\n            applications: thiss\n    });\n    }\n    sortbydname = () => {\n        let thiss  = this.state.applications;\n        thiss.sort((a,b) => (a.recname < b.recname) ? 1 : -1);\n        this.setState({\n            applications: thiss\n    });\n    }\n    sortbytitle = () => {\n        let thiss  = this.state.applications;\n        console.log(thiss)\n        thiss.sort((a,b) => (a.jobname > b.jobname) ? 1 : -1);\n        this.setState({\n            applications: thiss\n    });\n    }\n    sortbydtitle = () => {\n        let thiss  = this.state.applications;\n        thiss.sort((a,b) => (a.jobname < b.jobname) ? 1 : -1);\n        this.setState({\n            applications: thiss\n    });\n    }\n    sortbyrating = () => {\n        let thiss  = this.state.applications;\n        thiss.sort((a,b) => (a.rating > b.rating) ? 1 : -1);\n        this.setState({\n            applications: thiss\n    });\n    }\n    sortbydrating = () => {\n        let thiss  = this.state.applications;\n        thiss.sort((a,b) => (a.rating < b.rating) ? 1 : -1);\n        this.setState({\n            applications: thiss\n    });\n    }\n\n            render() {\n                return (\n                    <div>\n                        <form>\n                        <Button style = {{backgroundColor:'purple'}} variant=\"contained\"  onClick={this.sortbyname} >Sort By Name</Button>\n                        <Button style = {{backgroundColor:'purple'}} variant=\"contained\"  onClick={this.sortbydname} >Sort By Name(D)</Button>\n                        </form>\n                        <form>\n                        <Button style = {{backgroundColor:'lime'}} variant=\"contained\"  onClick={this.sortbytitle} >Sort By Title</Button>\n                        <Button style = {{backgroundColor:'lime'}} variant=\"contained\"  onClick={this.sortbydtitle} >Sort By Title(D)</Button>\n                        </form>\n                        <form>\n                        <Button style = {{backgroundColor:'orange'}} variant=\"contained\"  onClick={this.sortbyrating} >Sort By Rating</Button>\n                        <Button style = {{backgroundColor:'orange'}} variant=\"contained\"  onClick={this.sortbydrating} >Sort By Rating(D)</Button>\n                        </form>\n                        <form>\n                        <Button style = {{backgroundColor:'yellow'}} variant=\"contained\"  onClick={this.sortbyname} >Sort By Name</Button>\n                        <Button style = {{backgroundColor:'yellow'}} variant=\"contained\"  onClick={this.sortbyname} >Sort By Name</Button>\n                        </form>\n                       \n                        <table className=\"table table-striped\">\n                            <thead>\n                                <tr>\n                                    <th>Name</th>\n                                    <th>Job Title</th>\n                                    <th>Job Type</th>\n                                    <th>Rating</th>\n                                    <th>Date of Joining</th>\n\n                                    <th></th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                            { \n                                this.state.applications.map((job, i) => {\n                                    let varr = false;\n                                    return (\n                                        \n                                        <tr key={i}>\n                                            <td>{job.recname}</td>\n                                            <td>{job.jobname}</td>\n                                            <td>{job.typee}</td>\n                                            <td>{job.rating}</td>\n                                            <td>{job.doj}</td>\n\n                                            <th>\n                                        <Link to={{ pathname: './rateapp', state: { 'id': job._id , 'rating': job.rating } }}>Rate</Link></th>    \n\n                                        </tr>\n                                        \n                                    )\n                                })\n                            }\n                            </tbody>\n                        </table>\n                    </div>\n                )\n            }\n}\n\nexport default RecMyjob;","/home/aman/Desktop/ass1/Job-Portal-Website/frontend/src/components/Rec-profile.js",[],"/home/aman/Desktop/ass1/Job-Portal-Website/frontend/src/components/Appjob.js",["150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169"],"import React, {Component} from 'react';\nimport axios from 'axios';\n\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\n\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { Link } from 'react-router-dom';\n\nclass Appjob extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            jobs: [],\n            already_applied: [],\n            search: '',\n            minsalary: '',\n            maxsalary: '',\n            duration: 0,\n            j_type: 'F',\n            maxapp:''\n\n        };\n        this.onChangesearch = this.onChangesearch.bind(this);\n        this.sortbysalary = this.sortbysalary.bind(this);\n        this.sortbyduration = this.sortbyduration.bind(this);\n        this.sortbyrating = this.sortbyrating.bind(this);\n        this.dsortbyrating = this.dsortbyrating.bind(this);\n        this.dsortbyduration = this.dsortbyduration.bind(this);\n        this.dsortbysalary = this.dsortbysalary.bind(this);\n        this.onChangeminsalary = this.onChangeminsalary.bind(this);\n        this.onChangemaxsalary = this.onChangemaxsalary.bind(this);\n        this.onChangeduration = this.onChangeduration.bind(this);\n        this.onChangej_type = this.onChangej_type.bind(this);\n        this.filterbysalary = this.filterbysalary.bind(this);\n        this.filterbyduration = this.filterbyduration.bind(this);\n        this.filterbyj_type = this.filterbyj_type.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.subcount= this.subcount.bind(this);\n\n    }\n    onChangesearch(event) {\n        this.setState({ search: event.target.value });\n    }\n    onChangemaxsalary(event) {\n        this.setState({ maxsalary: event.target.value });\n    }\n    onChangeminsalary(event) {\n        this.setState({ minsalary: event.target.value });\n    }\n    onChangemaxsalary(event) {\n        this.setState({ maxsalary: event.target.value });\n    }\n    onChangeduration(event) {\n        this.setState({ duration: event.target.value });\n    }\n    onChangej_type(event) {\n        this.setState({ j_type: event.target.value });\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        const Search = {\n            title: this.state.search,\n        }\n\n        console.log(Search);\n        axios.post('http://localhost:5000/job/search', Search)\n             .then(res => {\n          //      console.log(res.data);\n                this.setState({jobs: res.data});\n\n            })\n             .catch(err =>\n                {\n                    if(err.response.data.message)\n                    alert(err.response.data.message);\n                    console.log(err)\n                });\n\n        this.setState({\n            search : '',\n        });\n    }\n    async componentWillMount(){\n        let curr = localStorage.getItem('userid');\n        \n        let arr = await axios.get('http://localhost:5000/job')\n             .then(response => {\n                return response.data;\n            })\n             .catch(function(error) {\n                 console.log(error);\n             });\n        \n        \n        this.setState({\n                jobs: arr,\n                minsalary: this.state.minsalary,\n                maxsalary: this.state.maxsalary\n        });\n        axios.post(\"http://localhost:5000/apply/app\",{id:curr})\n             .then(response =>{\n//                 console.log(response.data)\n                this.setState({already_applied: response.data});\n             })\n             .catch(function(error) {\n               window.alert(\"post error\")\n           })\n        const data = await Promise.all( arr.map(async function(job, i){\n            let alldata = {};\n            alldata = {...job};\n            let jobbid = alldata._id;\n            let arrr = await axios.post('http://localhost:5000/user/getname', { id: job.rec})\n            .then(response => {\n                return response.data;\n           });\n         //  console.log(arrr.name);\n           alldata.recname = arrr.name;\n           const idd = localStorage.getItem('userid');\n           let lol = 0;\n           let arrrr = await axios.post('http://localhost:5000/profileapp/getrem',{id:idd})\n            .then(response => {\n                return response.data;\n           });\n           alldata.rem = arrrr[0].rem;\n         //  console.log(jobbid);\n           let arrrrr = await axios.post('http://localhost:5000/job/getapp',{id:jobbid})\n            .then(response => {\n           //     console.log(response.data);\n                return response.data;\n           });\n           alldata.remaining = arrrrr.maxapp;\n           //alldata.maxapp = arrrrr.maxapp;\n            //    console.log(alldata);\n           return alldata;\n        \n        }));\n        this.setState({\n            jobs: data,\n            minsalary: this.state.minsalary,\n            maxsalary: this.state.maxsalary\n    });\n    //    console.log(data);\n    }\n    \n    \n    sortbysalary = () => {\n        let thiss  = this.state.jobs;\n        thiss.sort((a,b) => (a.salary > b.salary) ? 1 : -1);\n        this.setState({\n            jobs: thiss\n    });\n    }\n    \n    sortbyduration = () => {\n        let thiss  = this.state.jobs;\n        thiss.sort((a,b) => (a.duration > b.duration) ? 1 : -1);\n        this.setState({\n            jobs: thiss\n    });\n    }\n    \n    sortbyrating = () => {\n        let thiss  = this.state.jobs;\n        thiss.sort((a,b) => (a.rating > b.rating) ? 1 : -1);\n        this.setState({\n            jobs: thiss\n    });\n    }\n    dsortbyduration = () => {\n        let thiss  = this.state.jobs;\n        thiss.sort((a,b) => (a.duration < b.duration) ? 1 : -1);\n        this.setState({\n            jobs: thiss\n    });\n    }\n    dsortbyrating = () => {\n        let thiss  = this.state.jobs;\n        thiss.sort((a,b) => (a.rating < b.rating) ? 1 : -1);\n        this.setState({\n            jobs: thiss\n    });\n    }  \n    dsortbysalary = () => {\n        let thiss  = this.state.jobs;\n        thiss.sort((a,b) => (a.salary < b.salary) ? 1 : -1);\n        this.setState({\n            jobs: thiss\n    });\n    }\n    filterbysalary = () => {\n        let thiss  = this.state.jobs;\n        let neww =  thiss.filter( items => items.salary < this.state.maxsalary & items.salary > this.state.minsalary)\n        this.setState({\n            jobs: neww,\n            minsalary: '',\n            maxsalary: ''\n    });\n    }\n    filterbyduration = () => {\n        let thiss  = this.state.jobs;\n        let neww =  thiss.filter( items => items.duration === this.state.duration )\n        this.setState({\n            jobs: neww,\n    });\n    }\n    filterbyj_type = () => {\n        let thiss  = this.state.jobs;\n        let neww =  thiss.filter( items => items.type === this.state.j_type )\n        this.setState({\n            jobs: neww,\n    });\n    }\n    subcount() {\n        const idd = localStorage.getItem('userid');\n        let curr = 0;\n        axios.post('http://localhost:5000/profileapp/getrem',{id:idd})\n             .then(response => {\n             //  console.log(response.data[0]);\n                curr = response.data[0].rem;\n                let edit = {\n                    id: idd,\n                    rem: response.data[0].rem,\n                    ind: 2\n                }\n                console.log(10);\n                axios.post('http://localhost:5000/profileapp/rem', edit)\n                    .then(res => {\n                      //  console.log(res.data);\n                    })\n                    .catch(err => {\n                            alert(err);\n                    });\n\n            })\n             .catch(function(error) {\n                 console.log(error);\n             });\n\n        \n    }\n   \n            render() {\n                const curr = localStorage.getItem('userid');\n              //  console.log(this.state.jobs);\n                return (\n                    <div>\n                        <form onSubmit={this.onSubmit}>\n                        <div className=\"form-group\">\n                        <label>Job Title: </label>\n                        <input type=\"text\" \n                               className=\"form-control\" \n                               value={this.state.search}\n                               onChange={this.onChangesearch}\n                               />  \n                         </div>\n\n                        <div className=\"form-group\">\n                        <input type=\"submit\" value=\"Search\" className=\"btn btn-primary\" size=\"2\"/>\n                        </div>\n                         </form>\n                        <Button  onClick={this.sortbysalary} >Sort By Salary</Button>\n                        <Button  onClick={this.dsortbysalary} >Sort By Salary(Descending)</Button>\n                        <Button  onClick={this.sortbyduration} >Sort By Duration</Button>\n                        <Button  onClick={this.dsortbyduration} >Sort By Duration(Descending)</Button>\n                        <Button  onClick={this.sortbyrating} >Sort By Rating</Button>\n                        <Button  onClick={this.dsortbyrating} >Sort By Rating(Descending)</Button>\n                        <br></br>\n                        <label>Min Salary: </label>\n                        <input type=\"number\" \n                               value={this.state.minsalary}\n                               onChange={this.onChangeminsalary}\n                               />  \n                        \n                        <label> Max Salary: </label>\n                        <input type=\"number\" \n                               value={this.state.maxsalary}\n                               onChange={this.onChangemaxsalary}\n                               />  \n                        <Button  onClick={this.filterbysalary} >Filter by salary</Button>\n                        <div className=\"form-group\">\n                        <label>Duration: </label>\n                        <select className=\"form-control\"  value={this.state.duration} onChange={this.onChangeduration}> \n                            <option name=\"0\" value=\"0\">0</option>\n                            <option name=\"1\" value=\"1\">1</option>\n                            <option name=\"2\" value=\"2\">2</option>\n                            <option name=\"3\" value=\"3\">3</option>\n                            <option name=\"4\" value=\"4\">4</option>\n                            <option name=\"5\" value=\"5\">5</option>\n                            <option name=\"6\" value=\"6\">6</option>\n                        </select>\n                        <Button  onClick={this.filterbyduration} >Filter by Duration</Button>\n                    </div>\n                        <div className=\"form-group\">\n                        <label>Type: </label>\n                        <select className=\"form-control\"  value={this.state.j_type} onChange={this.onChangej_type}> \n                            <option name=\"F\" value=\"F\">Full Time</option>\n                            <option name=\"P\" value=\"P\">Part Time</option>\n                            <option name=\"W\" value=\"W\">Work From Home</option>\n                        </select>\n                        <Button  onClick={this.filterbyj_type} >Filter by Type</Button>\n                    </div>\n                        <table className=\"table table-striped\">\n                            <thead>\n                                <tr>\n                                    <th>Job Title</th>\n                                    <th>Recruiter</th>\n                                    <th>Job Rating</th>\n                                    <th>Salary per month</th>\n                                    <th>Job Duration</th>\n                                    <th>Job Type</th>\n                                    <th>Deadline</th>\n                                    <th>remaining applications</th>\n                                    <th></th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                            { \n                               this.state.jobs.map((job,i)=> {\n                                var array=[...this.state.already_applied]\n                                // console.log(array);\n                                        let mark=false;\n                                        for(var j=0;j<array.length;j++)\n                                        {\n                                            if(array[j].jobid===job._id)\n                                            {\n                                                mark=true\n                                            }\n                                        }   \n                                return(\n                                    \n                                <tr key={i}>\n                                <td>{job.title}</td>\n                                <td>{job.recname}</td>\n                                <td>{job.rating}</td>\n                                <td>{job.salary}</td>\n                                <td>{job.duration}</td>\n                                <td>{job.type}</td>\n                                <td>{job.deadline}</td>\n                                \n                                \n                                <th>\n                                    { job.maxapp ? ( job.rem > 0    ?  ( !mark ? <Link to={{ pathname: './sop', state: { 'jobid': job._id , 'app': curr , 'rec': job.rec} }} onClick={() => this.subcount()}> <Button style = {{backgroundColor:'green'}} variant=\"contained\" onClick={()=>{}}>Apply</Button></Link> : <Button style = {{backgroundColor:'lime'}} variant=\"contained\" >Applied</Button>)   : <Button  style = {{color:'red'}}  color=\"primary\" disabled>Limit Reached</Button>) : <Button  style = {{color:'red'}}  color=\"primary\" disabled>Full</Button> }</th>\n                                <td> \n                               \n                                </td>\n                                </tr>\n                                \n                                   )\n                               })\n                            }\n                            </tbody>\n                        </table>\n                    </div>\n                )\n            }\n}\n\nexport default Appjob;","/home/aman/Desktop/ass1/Job-Portal-Website/frontend/src/components/Profilerecedit.js",[],"/home/aman/Desktop/ass1/Job-Portal-Website/frontend/src/components/App-profile.js",[],"/home/aman/Desktop/ass1/Job-Portal-Website/frontend/src/components/Profileappedit.js",[],"/home/aman/Desktop/ass1/Job-Portal-Website/frontend/src/components/Rec-jobedit.js",[],"/home/aman/Desktop/ass1/Job-Portal-Website/frontend/src/components/Appsop.js",[],"/home/aman/Desktop/ass1/Job-Portal-Website/frontend/src/components/Shortlist.js",["170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189"],"import React, {Component} from 'react';\nimport axios from 'axios';\n\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\n\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { Link } from 'react-router-dom';\n\nclass RecMyjob extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            thisjob:this.props.location.state.id,\n            applications: [],\n            varr: false\n        };\n        this.changestate = this.changestate.bind(this);\n        this.sortbyname = this.sortbyname.bind(this);\n        this.sortbydname = this.sortbydname.bind(this);\n        this.sortbytitle = this.sortbytitle.bind(this);\n        this.sortbydtitle= this.sortbydtitle.bind(this);\n        this.sortbyrating = this.sortbyrating.bind(this);\n        this.sortbydrating = this.sortbydrating.bind(this);\n    }\n\n    changestate(idd,state,appid,event){\n        event.preventDefault();\n        if(state === 'Shortlisted')\n        {\n        \n        axios.post('http://localhost:5000/apply/rejectall', {id:appid})\n        .then(res => {\n            console.log(res.data);\n\n        })\n        .catch(err => {\n                alert(err);\n        });\n        }\n        const edit = {\n            id: idd,\n            state: state\n        }\n        console.log(edit);\n        console.log(1000000);\n        axios.post('http://localhost:5000/apply/state', edit)\n                    .then(res => {\n                        console.log(res.data);\n\n                    })\n                    .catch(err => {\n                            alert(err);\n                    });\n        window.location.reload();\n    }\n    async componentWillMount(){\n        let curr = localStorage.getItem('userid');\n\n        let arr = await axios.get('http://localhost:5000/apply')\n             .then(response => {\n            //     console.log(response.data);\n                return response.data;\n            })\n             .catch(function(error) {\n                 console.log(error);\n             });\n\n        \n        const data = await Promise.all( arr.map(async function(job, i){\n            let alldata = {};\n            alldata = {...job};\n            \n            let arrr = await axios.post('http://localhost:5000/user/getname', { id: job.app})\n            .then(response => {\n                return response.data;\n           });\n         //  console.log(arrr.name);\n           alldata.recname = arrr.name;\n           alldata.varr = 1;\n           let arrrr = await axios.post('http://localhost:5000/profileapp/getrating', { id: job.app})\n            .then(response => {\n                return response.data;\n           }); \n           alldata.rating = arrrr.rating;\n           return alldata;\n         \n        }));\n        this.setState({\n            applications: data\n    });\n    let neww = await data.filter( items => items.rec === curr );\n      //  console.log(neww);\n        this.setState({\n                applications: neww\n        });\n        \n        const currrr = \"Rejected\";\n        let newww = await neww.filter( items => items.type != currrr );\n        this.setState({\n                applications: newww\n        });\n        let newwww = await newww.filter( items => items.jobid === this.state.thisjob );\n        this.setState({\n                applications: newwww\n        });\n    }\n    \n    sortbyname = () => {\n        let thiss  = this.state.applications;\n        thiss.sort((a,b) => (a.recname > b.recname) ? 1 : -1);\n        this.setState({\n            applications: thiss\n    });\n    }\n    sortbydname = () => {\n        let thiss  = this.state.applications;\n        thiss.sort((a,b) => (a.recname < b.recname) ? 1 : -1);\n        this.setState({\n            applications: thiss\n    });\n    }\n    sortbytitle = () => {\n        let thiss  = this.state.applications;\n        thiss.sort((a,b) => (a.title > b.title) ? 1 : -1);\n        this.setState({\n            applications: thiss\n    });\n    }\n    sortbydtitle = () => {\n        let thiss  = this.state.applications;\n        thiss.sort((a,b) => (a.title < b.title) ? 1 : -1);\n        this.setState({\n            applications: thiss\n    });\n    }\n    sortbyrating = () => {\n        let thiss  = this.state.applications;\n        thiss.sort((a,b) => (a.rating > b.rating) ? 1 : -1);\n        this.setState({\n            applications: thiss\n    });\n    }\n    sortbydrating = () => {\n        let thiss  = this.state.applications;\n        thiss.sort((a,b) => (a.rating < b.rating) ? 1 : -1);\n        this.setState({\n            applications: thiss\n    });\n    }\n            render() {\n                return (\n                    <div>\n                       <form>\n                        <Button style = {{backgroundColor:'purple'}} variant=\"contained\"  onClick={this.sortbyname} >Sort By Name</Button>\n                        <Button style = {{backgroundColor:'purple'}} variant=\"contained\"  onClick={this.sortbydname} >Sort By Name(D)</Button>\n                        </form>\n                        <form>\n                        <Button style = {{backgroundColor:'lime'}} variant=\"contained\"  onClick={this.sortbytitle} >Sort By Title</Button>\n                        <Button style = {{backgroundColor:'lime'}} variant=\"contained\"  onClick={this.sortbydtitle} >Sort By Title(D)</Button>\n                        </form>\n                        <form>\n                        <Button style = {{backgroundColor:'orange'}} variant=\"contained\"  onClick={this.sortbyrating} >Sort By Rating</Button>\n                        <Button style = {{backgroundColor:'orange'}} variant=\"contained\"  onClick={this.sortbydrating} >Sort By Rating(D)</Button>\n                        </form>\n                        <table className=\"table table-striped\">\n                            <thead>\n                                <tr>\n                                    <th>Name</th>\n                                    <th>SOP</th>\n                                    <th>Education</th>\n                                    <th>Skills</th>\n                                    <th>Rating</th>\n                                    <th>Stage</th>\n                                    <th>Date of Application</th>\n\n                                    <th></th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                            { \n                                this.state.applications.map((job, i) => {\n                                    let varr = false;\n                                    return (\n                                        <tr key={i}>\n                                            <td>{job.recname}</td>\n                                            <td>{job.review}</td>\n                                            <td>{job.education}</td>\n                                            <td>{job.skills}</td>\n                                            <td>{job.rating}</td>\n                                            <td>{job.type}</td>\n                                            <td>{job.date}</td>\n                                            <th> {job.type === \"Applied\" ?  <Button style = {{backgroundColor:'aqua'}} variant=\"contained\" onClick={(event)=>{this.changestate(job._id,job.type,job.app,event)}}>Shortlist</Button> : (  job.type === \"Shortlisted\" ?  <Button style = {{backgroundColor:'yellow'}} variant=\"contained\" onClick={(event)=>{this.changestate(job._id,job.type,job.app,event)}}>Accept</Button> : <Button style = {{backgroundColor:'green'}} variant=\"contained\" onClick={(event)=>{this.changestate(job._id,job.type,job.app,event)}}>Badhai Ho</Button> )} </th>\n                                            <th>\n                                    { job.type === \"Accepted\" ?   <Button  style = {{color:'red'}}  color=\"primary\" disabled></Button> : <Button style = {{backgroundColor:'red'}} variant=\"contained\" onClick={(event)=>{this.changestate(job._id,\"Rejected\",job.app,event)}}>Reject</Button> } </th>\n                                             \n                                        </tr>\n                                        \n                                    )\n                                })\n                            }\n                            </tbody>\n                        </table>\n                    </div>\n                )\n            }\n}\n\nexport default RecMyjob;","/home/aman/Desktop/ass1/Job-Portal-Website/frontend/src/components/App-application.js",["190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207"],"import React, {Component} from 'react';\nimport axios from 'axios';\n\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\n\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { Link } from 'react-router-dom';\n\nclass Appapplication extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            applications: []\n\n        };\n\n    }\n    async componentWillMount(){\n        let curr = localStorage.getItem('userid');\n        \n        let arr = await axios.post('http://localhost:5000/apply/app',{id:curr})\n             .then(response => {\n                 console.log(response.data);\n                return response.data;\n            })\n             .catch(function(error) {\n                 console.log(error);\n             });\n        \n        \n        this.setState({\n                applications: arr\n        });\n        const data = await Promise.all( arr.map(async function(job, i){\n            let alldata = {};\n            alldata = {...job};\n            \n            let arrr = await axios.post('http://localhost:5000/user/getname', { id: job.rec})\n            .then(response => {\n                return response.data;\n           });\n           alldata.recname = arrr.name;\n            return alldata;\n         \n        }));\n        this.setState({\n            applications: data\n    });\n    const dataa = await Promise.all( data.map(async function(job, i){\n        let alldataa = {};\n        alldataa = {...job};\n        \n        let arrrr = await axios.post('http://localhost:5000/job/app', { id: job.jobid})\n        .then(response => {\n            return response.data;\n       });\n       alldataa.title = arrrr[0].title;\n       alldataa.rating = arrrr[0].rating;\n       alldataa.salary = arrrr[0].salary;\n       alldataa.duration = arrrr[0].duration;\n       alldataa.deadline = arrrr[0].deadline;\n\n       return alldataa;\n     \n    }));\n    this.setState({\n        applications: dataa\n});\n    //    console.log(data);\n    }\n    \n            render() {\n                const curr = localStorage.getItem('userid');\n                return (\n                    <div>\n                        <table className=\"table table-striped\">\n                            <thead>\n                                <tr>\n                                    <th>Job Title</th>\n                                    <th>Recruiter</th>\n                                    <th>Job Rating</th>\n                                    <th>Salary per month</th>\n                                    <th>Job Duration</th>\n                                    <th>Deadline</th>\n                                    <th>Status</th>\n                                    <th></th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                            { \n                                this.state.applications.map((application, i) => {\n                                    return (\n                                        <tr key={i}>\n                                            <td>{application.title}</td>\n                                            <td>{application.recname}</td>\n                                            <td>{application.rating}</td>\n                                            <td>{application.salary}</td>\n                                            <td>{application.duration}</td>\n                                            <td>{application.deadline}</td>\n                                            <td>{application.type}</td>\n                                            <th>\n                                        {application.type === 'Accepted' ? <Link to={{ pathname: './ratejob', state: { 'id': application._id , 'rating': application.rating } }}>Rate</Link> :  <Button  style = {{color:'red'}}  color=\"primary\" disabled>can't rate</Button>}</th>    \n\n                                        </tr>\n                                    )\n                                })\n                            }\n                            </tbody>\n                        </table>\n                    </div>\n                )\n            }\n}\n\nexport default Appapplication;","/home/aman/Desktop/ass1/Job-Portal-Website/frontend/src/components/rateapp.js",["208"],"import React, {Component} from 'react';\nimport axios from 'axios';\n\n\nexport default class RateApp extends Component {\n    \n    constructor(props) {\n\n        super(props);\n\n        this.state = {\n            id: this.props.location.state.id,\n            rating: this.props.location.state.rating\n        }\n        this.onChangerating = this.onChangerating.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n    \n    onChangerating(event) {\n        this.setState({ rating: event.target.value });\n    }\n    onSubmit(e) {\n        e.preventDefault();\n        let edit = {\n            id: this.state.id,\n            rating: this.state.rating,\n            to_be: 1\n        }\n        let arr =  axios.post('http://localhost:5000/apply/getapplication',edit)\n             .then(response => {\n                edit.id = response.data[0].app;\n                console.log(edit);\n\n                axios.post('http://localhost:5000/profileapp/editrating', edit)\n                .then(response => {\n                console.log(response.data.message);\n                this.props.history.push(\"/Rec-jobreq\");\n                window.location.reload();\n                })\n                .catch(err => {\n                    alert(err);\n                 });\n                return response.data;\n            })\n             .catch(function(error) {\n                 console.log(error);\n             });\n        \n    }\n\n    render() {\n        return (\n            <div>\n                <form onSubmit={this.onSubmit}>\n                    <div className=\"form-group\">\n                        <label>Rating: </label>\n                        <input type=\"number\"\n                               className=\"form-control\" \n                               value={this.state.rating}\n                               onChange={this.onChangerating}\n                               />  \n                    </div>\n                    <div className=\"form-group\">\n                        <input type=\"submit\" value=\"Rate\" className=\"btn btn-primary\"/>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}","/home/aman/Desktop/ass1/Job-Portal-Website/frontend/src/components/ratejob.js",["209"],{"ruleId":"210","replacedBy":"211"},{"ruleId":"212","replacedBy":"213"},{"ruleId":"214","severity":1,"message":"215","line":1,"column":18,"nodeType":"216","messageId":"217","endLine":1,"endColumn":27},{"ruleId":"214","severity":1,"message":"218","line":3,"column":42,"nodeType":"216","messageId":"217","endLine":3,"endColumn":46},{"ruleId":"214","severity":1,"message":"219","line":4,"column":5,"nodeType":"216","messageId":"217","endLine":4,"endColumn":14},{"ruleId":"214","severity":1,"message":"220","line":5,"column":5,"nodeType":"216","messageId":"217","endLine":5,"endColumn":18},{"ruleId":"214","severity":1,"message":"221","line":10,"column":5,"nodeType":"216","messageId":"217","endLine":10,"endColumn":18},{"ruleId":"214","severity":1,"message":"222","line":11,"column":5,"nodeType":"216","messageId":"217","endLine":11,"endColumn":20},{"ruleId":"214","severity":1,"message":"223","line":27,"column":16,"nodeType":"216","messageId":"217","endLine":27,"endColumn":20},{"ruleId":"210","replacedBy":"224"},{"ruleId":"212","replacedBy":"225"},{"ruleId":"214","severity":1,"message":"226","line":4,"column":8,"nodeType":"216","messageId":"217","endLine":4,"endColumn":13},{"ruleId":"214","severity":1,"message":"227","line":5,"column":8,"nodeType":"216","messageId":"217","endLine":5,"endColumn":12},{"ruleId":"214","severity":1,"message":"228","line":6,"column":8,"nodeType":"216","messageId":"217","endLine":6,"endColumn":17},{"ruleId":"214","severity":1,"message":"229","line":7,"column":8,"nodeType":"216","messageId":"217","endLine":7,"endColumn":17},{"ruleId":"214","severity":1,"message":"230","line":8,"column":8,"nodeType":"216","messageId":"217","endLine":8,"endColumn":16},{"ruleId":"214","severity":1,"message":"231","line":9,"column":8,"nodeType":"216","messageId":"217","endLine":9,"endColumn":13},{"ruleId":"214","severity":1,"message":"232","line":10,"column":8,"nodeType":"216","messageId":"217","endLine":10,"endColumn":17},{"ruleId":"214","severity":1,"message":"233","line":11,"column":8,"nodeType":"216","messageId":"217","endLine":11,"endColumn":14},{"ruleId":"214","severity":1,"message":"234","line":12,"column":8,"nodeType":"216","messageId":"217","endLine":12,"endColumn":17},{"ruleId":"214","severity":1,"message":"235","line":13,"column":8,"nodeType":"216","messageId":"217","endLine":13,"endColumn":12},{"ruleId":"214","severity":1,"message":"236","line":14,"column":8,"nodeType":"216","messageId":"217","endLine":14,"endColumn":16},{"ruleId":"214","severity":1,"message":"237","line":15,"column":8,"nodeType":"216","messageId":"217","endLine":15,"endColumn":15},{"ruleId":"214","severity":1,"message":"238","line":16,"column":8,"nodeType":"216","messageId":"217","endLine":16,"endColumn":20},{"ruleId":"214","severity":1,"message":"239","line":17,"column":8,"nodeType":"216","messageId":"217","endLine":17,"endColumn":18},{"ruleId":"214","severity":1,"message":"240","line":18,"column":8,"nodeType":"216","messageId":"217","endLine":18,"endColumn":22},{"ruleId":"214","severity":1,"message":"241","line":20,"column":8,"nodeType":"216","messageId":"217","endLine":20,"endColumn":18},{"ruleId":"214","severity":1,"message":"242","line":21,"column":8,"nodeType":"216","messageId":"217","endLine":21,"endColumn":23},{"ruleId":"214","severity":1,"message":"243","line":22,"column":8,"nodeType":"216","messageId":"217","endLine":22,"endColumn":25},{"ruleId":"214","severity":1,"message":"226","line":4,"column":8,"nodeType":"216","messageId":"217","endLine":4,"endColumn":13},{"ruleId":"214","severity":1,"message":"227","line":5,"column":8,"nodeType":"216","messageId":"217","endLine":5,"endColumn":12},{"ruleId":"214","severity":1,"message":"228","line":6,"column":8,"nodeType":"216","messageId":"217","endLine":6,"endColumn":17},{"ruleId":"214","severity":1,"message":"229","line":7,"column":8,"nodeType":"216","messageId":"217","endLine":7,"endColumn":17},{"ruleId":"214","severity":1,"message":"230","line":8,"column":8,"nodeType":"216","messageId":"217","endLine":8,"endColumn":16},{"ruleId":"214","severity":1,"message":"231","line":9,"column":8,"nodeType":"216","messageId":"217","endLine":9,"endColumn":13},{"ruleId":"214","severity":1,"message":"232","line":10,"column":8,"nodeType":"216","messageId":"217","endLine":10,"endColumn":17},{"ruleId":"214","severity":1,"message":"234","line":12,"column":8,"nodeType":"216","messageId":"217","endLine":12,"endColumn":17},{"ruleId":"214","severity":1,"message":"235","line":13,"column":8,"nodeType":"216","messageId":"217","endLine":13,"endColumn":12},{"ruleId":"214","severity":1,"message":"236","line":14,"column":8,"nodeType":"216","messageId":"217","endLine":14,"endColumn":16},{"ruleId":"214","severity":1,"message":"237","line":15,"column":8,"nodeType":"216","messageId":"217","endLine":15,"endColumn":15},{"ruleId":"214","severity":1,"message":"238","line":16,"column":8,"nodeType":"216","messageId":"217","endLine":16,"endColumn":20},{"ruleId":"214","severity":1,"message":"239","line":17,"column":8,"nodeType":"216","messageId":"217","endLine":17,"endColumn":18},{"ruleId":"214","severity":1,"message":"240","line":18,"column":8,"nodeType":"216","messageId":"217","endLine":18,"endColumn":22},{"ruleId":"214","severity":1,"message":"241","line":20,"column":8,"nodeType":"216","messageId":"217","endLine":20,"endColumn":18},{"ruleId":"214","severity":1,"message":"242","line":21,"column":8,"nodeType":"216","messageId":"217","endLine":21,"endColumn":23},{"ruleId":"214","severity":1,"message":"243","line":22,"column":8,"nodeType":"216","messageId":"217","endLine":22,"endColumn":25},{"ruleId":"214","severity":1,"message":"244","line":174,"column":41,"nodeType":"216","messageId":"217","endLine":174,"endColumn":45},{"ruleId":"214","severity":1,"message":"226","line":4,"column":8,"nodeType":"216","messageId":"217","endLine":4,"endColumn":13},{"ruleId":"214","severity":1,"message":"227","line":5,"column":8,"nodeType":"216","messageId":"217","endLine":5,"endColumn":12},{"ruleId":"214","severity":1,"message":"228","line":6,"column":8,"nodeType":"216","messageId":"217","endLine":6,"endColumn":17},{"ruleId":"214","severity":1,"message":"229","line":7,"column":8,"nodeType":"216","messageId":"217","endLine":7,"endColumn":17},{"ruleId":"214","severity":1,"message":"230","line":8,"column":8,"nodeType":"216","messageId":"217","endLine":8,"endColumn":16},{"ruleId":"214","severity":1,"message":"231","line":9,"column":8,"nodeType":"216","messageId":"217","endLine":9,"endColumn":13},{"ruleId":"214","severity":1,"message":"232","line":10,"column":8,"nodeType":"216","messageId":"217","endLine":10,"endColumn":17},{"ruleId":"214","severity":1,"message":"234","line":12,"column":8,"nodeType":"216","messageId":"217","endLine":12,"endColumn":17},{"ruleId":"214","severity":1,"message":"235","line":13,"column":8,"nodeType":"216","messageId":"217","endLine":13,"endColumn":12},{"ruleId":"214","severity":1,"message":"236","line":14,"column":8,"nodeType":"216","messageId":"217","endLine":14,"endColumn":16},{"ruleId":"214","severity":1,"message":"237","line":15,"column":8,"nodeType":"216","messageId":"217","endLine":15,"endColumn":15},{"ruleId":"214","severity":1,"message":"238","line":16,"column":8,"nodeType":"216","messageId":"217","endLine":16,"endColumn":20},{"ruleId":"214","severity":1,"message":"239","line":17,"column":8,"nodeType":"216","messageId":"217","endLine":17,"endColumn":18},{"ruleId":"214","severity":1,"message":"240","line":18,"column":8,"nodeType":"216","messageId":"217","endLine":18,"endColumn":22},{"ruleId":"214","severity":1,"message":"241","line":20,"column":8,"nodeType":"216","messageId":"217","endLine":20,"endColumn":18},{"ruleId":"214","severity":1,"message":"242","line":21,"column":8,"nodeType":"216","messageId":"217","endLine":21,"endColumn":23},{"ruleId":"214","severity":1,"message":"243","line":22,"column":8,"nodeType":"216","messageId":"217","endLine":22,"endColumn":25},{"ruleId":"245","severity":1,"message":"246","line":67,"column":5,"nodeType":"247","messageId":"248","endLine":69,"endColumn":6},{"ruleId":"214","severity":1,"message":"249","line":137,"column":16,"nodeType":"216","messageId":"217","endLine":137,"endColumn":19},{"ruleId":"214","severity":1,"message":"250","line":237,"column":17,"nodeType":"216","messageId":"217","endLine":237,"endColumn":21},{"ruleId":"214","severity":1,"message":"226","line":4,"column":8,"nodeType":"216","messageId":"217","endLine":4,"endColumn":13},{"ruleId":"214","severity":1,"message":"227","line":5,"column":8,"nodeType":"216","messageId":"217","endLine":5,"endColumn":12},{"ruleId":"214","severity":1,"message":"228","line":6,"column":8,"nodeType":"216","messageId":"217","endLine":6,"endColumn":17},{"ruleId":"214","severity":1,"message":"229","line":7,"column":8,"nodeType":"216","messageId":"217","endLine":7,"endColumn":17},{"ruleId":"214","severity":1,"message":"230","line":8,"column":8,"nodeType":"216","messageId":"217","endLine":8,"endColumn":16},{"ruleId":"214","severity":1,"message":"231","line":9,"column":8,"nodeType":"216","messageId":"217","endLine":9,"endColumn":13},{"ruleId":"214","severity":1,"message":"232","line":10,"column":8,"nodeType":"216","messageId":"217","endLine":10,"endColumn":17},{"ruleId":"214","severity":1,"message":"234","line":12,"column":8,"nodeType":"216","messageId":"217","endLine":12,"endColumn":17},{"ruleId":"214","severity":1,"message":"235","line":13,"column":8,"nodeType":"216","messageId":"217","endLine":13,"endColumn":12},{"ruleId":"214","severity":1,"message":"236","line":14,"column":8,"nodeType":"216","messageId":"217","endLine":14,"endColumn":16},{"ruleId":"214","severity":1,"message":"237","line":15,"column":8,"nodeType":"216","messageId":"217","endLine":15,"endColumn":15},{"ruleId":"214","severity":1,"message":"238","line":16,"column":8,"nodeType":"216","messageId":"217","endLine":16,"endColumn":20},{"ruleId":"214","severity":1,"message":"239","line":17,"column":8,"nodeType":"216","messageId":"217","endLine":17,"endColumn":18},{"ruleId":"214","severity":1,"message":"240","line":18,"column":8,"nodeType":"216","messageId":"217","endLine":18,"endColumn":22},{"ruleId":"214","severity":1,"message":"241","line":20,"column":8,"nodeType":"216","messageId":"217","endLine":20,"endColumn":18},{"ruleId":"214","severity":1,"message":"242","line":21,"column":8,"nodeType":"216","messageId":"217","endLine":21,"endColumn":23},{"ruleId":"214","severity":1,"message":"243","line":22,"column":8,"nodeType":"216","messageId":"217","endLine":22,"endColumn":25},{"ruleId":"214","severity":1,"message":"218","line":23,"column":10,"nodeType":"216","messageId":"217","endLine":23,"endColumn":14},{"ruleId":"251","severity":1,"message":"252","line":115,"column":60,"nodeType":"253","messageId":"248","endLine":115,"endColumn":62},{"ruleId":"214","severity":1,"message":"244","line":199,"column":41,"nodeType":"216","messageId":"217","endLine":199,"endColumn":45},{"ruleId":"214","severity":1,"message":"226","line":4,"column":8,"nodeType":"216","messageId":"217","endLine":4,"endColumn":13},{"ruleId":"214","severity":1,"message":"227","line":5,"column":8,"nodeType":"216","messageId":"217","endLine":5,"endColumn":12},{"ruleId":"214","severity":1,"message":"228","line":6,"column":8,"nodeType":"216","messageId":"217","endLine":6,"endColumn":17},{"ruleId":"214","severity":1,"message":"229","line":7,"column":8,"nodeType":"216","messageId":"217","endLine":7,"endColumn":17},{"ruleId":"214","severity":1,"message":"230","line":8,"column":8,"nodeType":"216","messageId":"217","endLine":8,"endColumn":16},{"ruleId":"214","severity":1,"message":"231","line":9,"column":8,"nodeType":"216","messageId":"217","endLine":9,"endColumn":13},{"ruleId":"214","severity":1,"message":"232","line":10,"column":8,"nodeType":"216","messageId":"217","endLine":10,"endColumn":17},{"ruleId":"214","severity":1,"message":"234","line":12,"column":8,"nodeType":"216","messageId":"217","endLine":12,"endColumn":17},{"ruleId":"214","severity":1,"message":"235","line":13,"column":8,"nodeType":"216","messageId":"217","endLine":13,"endColumn":12},{"ruleId":"214","severity":1,"message":"236","line":14,"column":8,"nodeType":"216","messageId":"217","endLine":14,"endColumn":16},{"ruleId":"214","severity":1,"message":"237","line":15,"column":8,"nodeType":"216","messageId":"217","endLine":15,"endColumn":15},{"ruleId":"214","severity":1,"message":"238","line":16,"column":8,"nodeType":"216","messageId":"217","endLine":16,"endColumn":20},{"ruleId":"214","severity":1,"message":"239","line":17,"column":8,"nodeType":"216","messageId":"217","endLine":17,"endColumn":18},{"ruleId":"214","severity":1,"message":"240","line":18,"column":8,"nodeType":"216","messageId":"217","endLine":18,"endColumn":22},{"ruleId":"214","severity":1,"message":"241","line":20,"column":8,"nodeType":"216","messageId":"217","endLine":20,"endColumn":18},{"ruleId":"214","severity":1,"message":"242","line":21,"column":8,"nodeType":"216","messageId":"217","endLine":21,"endColumn":23},{"ruleId":"214","severity":1,"message":"243","line":22,"column":8,"nodeType":"216","messageId":"217","endLine":22,"endColumn":25},{"ruleId":"214","severity":1,"message":"250","line":90,"column":23,"nodeType":"216","messageId":"217","endLine":90,"endColumn":27},{"ruleId":"214","severity":1,"message":"254","line":29,"column":13,"nodeType":"216","messageId":"217","endLine":29,"endColumn":16},{"ruleId":"214","severity":1,"message":"254","line":29,"column":13,"nodeType":"216","messageId":"217","endLine":29,"endColumn":16},"no-native-reassign",["255"],"no-negated-in-lhs",["256"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'ListGroup' is defined but never used.","'ListGroupItem' is defined but never used.","'CSSTransition' is defined but never used.","'TransitionGroup' is defined but never used.","'jobs' is assigned a value but never used.",["255"],["256"],"'Paper' is defined but never used.","'Grid' is defined but never used.","'TableCell' is defined but never used.","'TableHead' is defined but never used.","'TableRow' is defined but never used.","'Table' is defined but never used.","'TableBody' is defined but never used.","'Button' is defined but never used.","'TextField' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'Divider' is defined but never used.","'Autocomplete' is defined but never used.","'IconButton' is defined but never used.","'InputAdornment' is defined but never used.","'SearchIcon' is defined but never used.","'ArrowUpwardIcon' is defined but never used.","'ArrowDownwardIcon' is defined but never used.","'varr' is assigned a value but never used.","no-dupe-class-members","Duplicate name 'onChangemaxsalary'.","MethodDefinition","unexpected","'lol' is assigned a value but never used.","'curr' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","'arr' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]